import React, { useState } from "react";

// Component ย่อยสำหรับแต่ละ Icon
const SocialIcon = ({ type, url, size = 50 }) => {
	const [isHovered, setIsHovered] = useState(false);

	const iconProps = {
		xmlns: "http://www.w3.org/2000/svg",
		width: size,
		height: size,
		className: "cursor-pointer",
		onMouseEnter: () => setIsHovered(true),
		onMouseLeave: () => setIsHovered(false),
		onClick: () => window.open(url, "_blank"),
	};

	// เลือก Icon ตามประเภท
	switch (type) {
		case "facebook":
			return (
				<svg
					{...iconProps}
					x="0px"
					y="0px"
					viewBox="0,0,256,256"
					style={{ fill: isHovered ? "#0a6cff" : "#F1F1F1" }}
				>
					<g
						fillRule="nonzero"
						stroke="none"
						strokeWidth="1"
						strokeLinecap="butt"
						strokeLinejoin="miter"
						strokeMiterlimit="10"
						strokeDasharray=""
						strokeDashoffset="0"
						fontFamily="none"
						fontWeight="none"
						fontSize="none"
						textAnchor="none"
						style={{ mixBlendMode: "normal" }}
					>
						<g transform="scale(5.33333,5.33333)">
							<path d="M24,4c-11.02793,0 -20,8.97207 -20,20c0,11.02793 8.97207,20 20,20c11.02793,0 20,-8.97207 20,-20c0,-11.02793 -8.97207,-20 -20,-20zM24,7c9.40662,0 17,7.59339 17,17c0,8.38077 -6.03282,15.30637 -14,16.7207v-11.7207h3.625c0.504,0 0.93019,-0.37695 0.99219,-0.87695l0.375,-3c0.036,-0.284 -0.05414,-0.56916 -0.24414,-0.78516c-0.189,-0.215 -0.46105,-0.33789 -0.74805,-0.33789h-4v-3.5c0,-1.103 0.897,-2 2,-2h2c0.552,0 1,-0.447 1,-1v-3.375c0,-0.518 -0.39516,-0.95009 -0.91016,-0.99609c-0.059,-0.005 -1.46986,-0.12891 -3.25586,-0.12891c-4.407,0 -6.83398,2.61619 -6.83398,7.36719v3.63281h-4c-0.552,0 -1,0.447 -1,1v3c0,0.553 0.448,1 1,1h4v11.7207c-7.96718,-1.41433 -14,-8.33993 -14,-16.7207c0,-9.40661 7.59339,-17 17,-17z"></path>
						</g>
					</g>
				</svg>
			);

		case "instagram":
			return (
				<svg {...iconProps} x="0px" y="0px" viewBox="0 0 48 48">
					<defs>
						<linearGradient
							id="instagram-gradient"
							x1="0%"
							y1="0%"
							x2="100%"
							y2="100%"
						>
							<stop offset="0%" stopColor="#405DE6" />
							<stop offset="20%" stopColor="#5851DB" />
							<stop offset="40%" stopColor="#833AB4" />
							<stop offset="60%" stopColor="#C13584" />
							<stop offset="80%" stopColor="#E1306C" />
							<stop offset="100%" stopColor="#FD1D1D" />
						</linearGradient>
					</defs>
					<path
						d="M 16.5 5 C 10.16639 5 5 10.16639 5 16.5 L 5 31.5 C 5 37.832757 10.166209 43 16.5 43 L 31.5 43 C 37.832938 43 43 37.832938 43 31.5 L 43 16.5 C 43 10.166209 37.832757 5 31.5 5 L 16.5 5 z M 16.5 8 L 31.5 8 C 36.211243 8 40 11.787791 40 16.5 L 40 31.5 C 40 36.211062 36.211062 40 31.5 40 L 16.5 40 C 11.787791 40 8 36.211243 8 31.5 L 8 16.5 C 8 11.78761 11.78761 8 16.5 8 z M 34 12 C 32.895 12 32 12.895 32 14 C 32 15.105 32.895 16 34 16 C 35.105 16 36 15.105 36 14 C 36 12.895 35.105 12 34 12 z M 24 14 C 18.495178 14 14 18.495178 14 24 C 14 29.504822 18.495178 34 24 34 C 29.504822 34 34 29.504822 34 24 C 34 18.495178 29.504822 14 24 14 z M 24 17 C 27.883178 17 31 20.116822 31 24 C 31 27.883178 27.883178 31 24 31 C 20.116822 31 17 27.883178 17 24 C 17 20.116822 20.116822 17 24 17 z"
						style={{
							fill: isHovered ? "url(#instagram-gradient)" : "#F1F1F1",
							transition: "fill 0.3s ease",
						}}
					/>
				</svg>
			);

		case "line":
			return (
				<svg
					{...iconProps}
					x="0px"
					y="0px"
					viewBox="0 0 48 48"
					style={{ fill: isHovered ? "#40C057" : "#F1F1F1" }}
				>
					<path d="M 23.007812 5 C 11.600129 5 2.0058594 12.5508 2.0058594 22.236328 C 2.0058594 30.874232 9.6073525 37.884555 19.505859 39.232422 C 19.733605 39.281857 19.977406 39.361175 20.132812 39.429688 C 20.118043 39.515147 20.153199 39.911316 20.105469 40.273438 C 20.105469 40.273438 20.105469 40.275391 20.105469 40.275391 C 20.092619 40.352451 19.881057 41.615404 19.835938 41.878906 L 19.837891 41.876953 C 19.762771 42.309977 19.521995 43.033546 20.193359 44.048828 C 20.529042 44.556469 21.285396 44.987587 21.962891 45 C 22.640385 45.01241 23.208997 44.789728 23.832031 44.447266 C 28.380052 41.946356 33.321386 39.124288 37.214844 35.580078 C 41.108302 32.035869 44.005859 27.639151 44.005859 22.236328 C 44.005809 12.551142 34.415496 5 23.007812 5 z M 23.007812 8 C 33.10213 8 41.005859 14.567511 41.005859 22.236328 C 41.005859 26.578505 38.734856 30.139288 35.195312 33.361328 C 31.801217 36.450969 27.286874 39.09321 22.943359 41.494141 C 23.000899 41.149653 23.072266 40.71875 23.072266 40.71875 L 23.076172 40.695312 L 23.080078 40.671875 C 23.155098 40.109193 23.364983 39.264995 22.923828 38.162109 L 22.921875 38.160156 L 22.921875 38.158203 C 22.588283 37.333404 21.970623 36.974887 21.476562 36.738281 C 20.982502 36.501675 20.514934 36.37997 20.126953 36.296875 L 20.068359 36.285156 L 20.007812 36.277344 C 11.219504 35.121092 5.0058594 29.123568 5.0058594 22.236328 C 5.0058594 14.567856 12.913496 8 23.007812 8 z M 18.333984 17.136719 C 17.769984 17.136719 17.310547 17.592344 17.310547 18.152344 L 17.310547 25.845703 C 17.310547 26.406703 17.768984 26.861328 18.333984 26.861328 C 18.897984 26.861328 19.357422 26.405703 19.357422 25.845703 L 19.357422 18.152344 C 19.357422 17.592344 18.898984 17.136719 18.333984 17.136719 z M 21.853516 17.136719 C 21.743516 17.136719 21.633344 17.154453 21.527344 17.189453 C 21.109344 17.328453 20.828125 17.715344 20.828125 18.152344 L 20.828125 25.845703 C 20.828125 26.406703 21.288516 26.861328 21.853516 26.861328 C 22.419516 26.861328 22.878906 26.405703 22.878906 25.845703 L 22.878906 21.087891 L 26.853516 26.455078 C 27.045516 26.709078 27.351875 26.861328 27.671875 26.861328 C 27.780875 26.861328 27.890094 26.843594 27.996094 26.808594 C 28.416094 26.671594 28.697266 26.284703 28.697266 25.845703 L 28.697266 18.150391 C 28.697266 17.590391 28.238828 17.136719 27.673828 17.136719 C 27.108828 17.136719 26.648438 17.590391 26.648438 18.150391 L 26.648438 22.912109 L 22.671875 17.542969 C 22.479875 17.288969 22.172516 17.136719 21.853516 17.136719 z M 11.466797 17.138672 C 10.902797 17.138672 10.443359 17.592344 10.443359 18.152344 L 10.443359 25.847656 C 10.443359 26.408656 10.901797 26.863281 11.466797 26.863281 L 15.345703 26.863281 C 15.910703 26.863281 16.368187 26.405703 16.367188 25.845703 C 16.367188 25.285703 15.910703 24.830078 15.345703 24.830078 L 12.488281 24.830078 L 12.488281 18.152344 C 12.488281 17.592344 12.031797 17.138672 11.466797 17.138672 z M 31.095703 17.138672 C 30.531703 17.138672 30.072266 17.594297 30.072266 18.154297 L 30.072266 18.15625 L 30.072266 21.998047 L 30.072266 22 L 30.072266 22.001953 L 30.072266 25.845703 C 30.072266 26.406703 30.532703 26.861328 31.095703 26.861328 L 34.974609 26.861328 C 35.539609 26.861328 36 26.405703 36 25.845703 C 36 25.285703 35.539609 24.830078 34.974609 24.830078 L 32.119141 24.830078 L 32.119141 23.013672 L 34.974609 23.013672 C 35.540609 23.013672 36 22.558047 36 21.998047 C 36 21.437047 35.539609 20.982422 34.974609 20.982422 L 34.974609 20.986328 L 32.119141 20.986328 L 32.119141 19.169922 L 34.974609 19.169922 C 35.540609 19.169922 36 18.714297 36 18.154297 C 36 17.594297 35.539609 17.138672 34.974609 17.138672 L 31.095703 17.138672 z"></path>
				</svg>
			);

		case "tiktok":
			return (
				<svg {...iconProps} x="0px" y="0px" viewBox="0 0 48 48">
					<defs>
						<linearGradient
							id="tiktok-gradient"
							x1="0%"
							y1="0%"
							x2="100%"
							y2="100%"
						>
							<stop offset="0%" stopColor="#25F4EE" />
							<stop offset="50%" stopColor="#FE2C55" />
							<stop offset="100%" stopColor="#25F4EE" />
						</linearGradient>
					</defs>
					<path
						d="M 11.5 6 C 8.4802259 6 6 8.4802259 6 11.5 L 6 36.5 C 6 39.519774 8.4802259 42 11.5 42 L 36.5 42 C 39.519774 42 42 39.519774 42 36.5 L 42 11.5 C 42 8.4802259 39.519774 6 36.5 6 L 11.5 6 z M 11.5 9 L 36.5 9 C 37.898226 9 39 10.101774 39 11.5 L 39 36.5 C 39 37.898226 37.898226 39 36.5 39 L 11.5 39 C 10.101774 39 9 37.898226 9 36.5 L 9 11.5 C 9 10.101774 10.101774 9 11.5 9 z M 26.435547 13.023438 A 1.50015 1.50015 0 0 0 25 14.5 L 25 28 C 25 30.227598 23.227598 32 21 32 C 18.772402 32 17 30.227598 17 28 C 17 25.772402 18.772402 24 21 24 A 1.50015 1.50015 0 1 0 21 21 C 17.151598 21 14 24.151598 14 28 C 14 31.848402 17.151598 35 21 35 C 24.848402 35 28 31.848402 28 28 L 28 20.335938 C 29.268121 21.316987 30.78243 22 32.5 22 A 1.50015 1.50015 0 1 0 32.5 19 C 29.996501 19 28 17.003499 28 14.5 A 1.50015 1.50015 0 0 0 26.435547 13.023438 z"
						style={{
							fill: isHovered ? "url(#tiktok-gradient)" : "#F1F1F1",
							transition: "fill 0.3s ease",
						}}
					/>
				</svg>
			);

		default:
			return null;
	}
};

// Component หลักที่ใช้แสดง social icons ทั้งหมด
export default function SocialIcons({ size = 50 }) {
	const socialLinks = [
		{ type: "facebook", url: "https://www.facebook.com/bydbangkok" },
		{ type: "instagram", url: "https://www.instagram.com/byd.metromobile" },
		{ type: "line", url: "https://line.me/R/ti/p/%40bydmetromobile" },
		{ type: "tiktok", url: "https://www.tiktok.com/@byd_metromobile" },
	];

	return (
		<div className="flex items-center gap-4">
			{socialLinks.map((social) => (
				<SocialIcon
					key={social.type}
					type={social.type}
					url={social.url}
					size={size}
				/>
			))}
		</div>
	);
}

// ส่งออก Component ย่อยเพื่อให้สามารถใช้งานแยกได้ถ้าต้องการ
export { SocialIcon };
